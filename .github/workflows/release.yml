name: 🚀 Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string

permissions:
  contents: write   # Required for checkout and creating releases
  actions: write    # Required for artifact uploads

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2

jobs:
  release:
    name: 🚀 Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ☕ Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: 📦 Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: 🔧 Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: 🧪 Run Tests
      run: ./gradlew test

    - name: 🧹 Run Lint
      run: ./gradlew lintDebug

    - name: 🏗️ Build Release APK
      run: ./gradlew assembleRelease

    - name: 🏗️ Build Debug APK
      run: ./gradlew assembleDebug

    - name: 📊 APK Info
      run: |
        echo "## 📱 APK Information" >> $GITHUB_STEP_SUMMARY
        echo "| Type | Size | Path |" >> $GITHUB_STEP_SUMMARY
        echo "|------|------|------|" >> $GITHUB_STEP_SUMMARY
        
        DEBUG_APK=$(find app/build/outputs/apk/debug -name "*.apk" | head -1)
        RELEASE_APK=$(find app/build/outputs/apk/release -name "*.apk" | head -1)
        
        if [ -f "$DEBUG_APK" ]; then
          DEBUG_SIZE=$(du -h "$DEBUG_APK" | cut -f1)
          echo "| Debug | $DEBUG_SIZE | $DEBUG_APK |" >> $GITHUB_STEP_SUMMARY
        fi
        
        if [ -f "$RELEASE_APK" ]; then
          RELEASE_SIZE=$(du -h "$RELEASE_APK" | cut -f1)
          echo "| Release | $RELEASE_SIZE | $RELEASE_APK |" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 🏷️ Get Version
      id: version
      run: |
        if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
          VERSION="${{ github.event.inputs.version }}"
        else
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "📦 Version: ${VERSION}"

    - name: 📝 Generate Changelog
      id: changelog
      run: |
        echo "## 🚀 Release ${{ steps.version.outputs.version }}" > changelog.md
        echo "" >> changelog.md
        echo "### 📱 APK Downloads" >> changelog.md
        echo "- **Debug APK**: Includes debugging symbols and logging" >> changelog.md
        echo "- **Release APK**: Optimized for production use" >> changelog.md
        echo "" >> changelog.md
        echo "### ✨ Features" >> changelog.md
        echo "- Modern Android Architecture with MVVM + UiState" >> changelog.md
        echo "- Koin dependency injection" >> changelog.md
        echo "- Jetpack Compose + Material 3 UI" >> changelog.md
        echo "- Room database with offline-first approach" >> changelog.md
        echo "- Retrofit for API communication" >> changelog.md
        echo "- Comprehensive unit tests" >> changelog.md
        echo "" >> changelog.md
        echo "### 🏗️ Build Information" >> changelog.md
        echo "- **Commit**: ${{ github.sha }}" >> changelog.md
        echo "- **Build Date**: $(date -u +'%Y-%m-%d %H:%M:%S UTC')" >> changelog.md
        echo "- **Workflow**: ${{ github.workflow }}" >> changelog.md

    - name: 🚀 Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body_path: changelog.md
        files: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/release/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 📤 Upload Release APKs
      uses: actions/upload-artifact@v4
      with:
        name: release-apks-${{ steps.version.outputs.version }}
        path: |
          app/build/outputs/apk/debug/*.apk
          app/build/outputs/apk/release/*.apk
